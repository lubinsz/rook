From 0c486c52014d11ff78adcacf47dced1a940c25d8 Mon Sep 17 00:00:00 2001
From: Bin Lu <lubinsz@gmail.com>
Date: Thu, 15 Nov 2018 10:58:28 +0800
Subject: [PATCH] enable cross

---
 .travis.yml                        |  32 +++
 0001-enable-cross.patch            | 403 +++++++++++++++++++++++++++++++++++++
 images/nfs/Dockerfile              |  19 +-
 images/nfs/Dockerfile_header_arm64 |   1 +
 images/nfs/Makefile                |  18 +-
 5 files changed, 451 insertions(+), 22 deletions(-)
 create mode 100644 .travis.yml
 create mode 100644 0001-enable-cross.patch
 create mode 100644 images/nfs/Dockerfile_header_arm64

diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 0000000..8b10b1e
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,32 @@
+language: go
+go_import_path: github.com/lubinsz/rook 
+
+sudo: required
+
+services: docker
+
+go:
+  - 1.10.x
+
+notifications:
+  on_success: never
+  on_failure: never
+
+before_install:
+  - sudo apt-get -qq update
+  - sudo apt-get install -y libseccomp-dev/trusty-backports
+  - go get -u github.com/ghodss/yaml 
+install:
+  - mkdir -p ${GOPATH}/src/k8s.io
+  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/kubernetes.git)
+  - (cd ${GOPATH}/src/k8s.io/kubernetes && git checkout v1.11.3)
+  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/client-go.git)
+  - (cd ${GOPATH}/src/k8s.io/client-go && git checkout v9.0.0)  
+  - mkdir -p ${GOPATH}/src/github.com/rook
+  - (cd ${GOPATH}/src/github.com/rook && rm * -rf && git clone https://github.com/rook/rook.git)
+  - (cd ${GOPATH}/src/github.com/rook/rook && go get -d ./...)
+  - (cp ${GOPATH}/src/github.com/lubinsz/rook/0001-enable-cross.patch ${GOPATH}/src/github.com/rook/rook/)
+  - (cd ${GOPATH}/src/github.com/rook/rook && patch -p1 <0001-enable-cross.patch)  
+  - (cd ${GOPATH}/src/github.com/rook/rook && make build && make do.build.parallel && make -C images/nfs PLATFORM=linux_arm64)  
+script:
+  - echo "finished" 
diff --git a/0001-enable-cross.patch b/0001-enable-cross.patch
new file mode 100644
index 0000000..185b350
--- /dev/null
+++ b/0001-enable-cross.patch
@@ -0,0 +1,403 @@
+From c2f318b09185e03182b998811d522929f9839c4c Mon Sep 17 00:00:00 2001
+From: Bin Lu <lubinsz@gmail.com>
+Date: Thu, 15 Nov 2018 10:58:28 +0800
+Subject: [PATCH] enable cross
+
+---
+ .travis.yml                        |  32 +++++
+ 0001-enable-cross.patch            | 260 +++++++++++++++++++++++++++++++++++++
+ images/nfs/Dockerfile              |  19 +--
+ images/nfs/Dockerfile_header_arm64 |   1 +
+ images/nfs/Makefile                |  18 ++-
+ 5 files changed, 308 insertions(+), 22 deletions(-)
+ create mode 100644 .travis.yml
+ create mode 100644 0001-enable-cross.patch
+ create mode 100644 images/nfs/Dockerfile_header_arm64
+
+diff --git a/.travis.yml b/.travis.yml
+new file mode 100644
+index 0000000..2bea51f
+--- /dev/null
++++ b/.travis.yml
+@@ -0,0 +1,32 @@
++language: go
++go_import_path: github.com/lubinsz/rook 
++
++sudo: required
++
++services: docker
++
++go:
++  - 1.10.x
++
++notifications:
++  on_success: never
++  on_failure: never
++
++before_install:
++  - sudo apt-get -qq update
++  - sudo apt-get install -y libseccomp-dev/trusty-backports
++  - go get -u github.com/ghodss/yaml 
++install:
++  - mkdir -p ${GOPATH}/src/k8s.io
++  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/kubernetes.git)
++  - (cd ${GOPATH}/src/k8s.io/kubernetes && git checkout v1.11.3)
++  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/client-go.git)
++  - (cd ${GOPATH}/src/k8s.io/client-go && git checkout v9.0.0)  
++  - mkdir -p ${GOPATH}/src/github.com/rook
++  - (cd ${GOPATH}/src/github.com/rook && git clone https://github.com/rook/rook.git)
++  - (cd ${GOPATH}/src/github.com/rook/rook && go get -d ./...)
++  - (cp ${GOPATH}/src/github.com/lubinsz/rook/0001-enable-cross.patch ${GOPATH}/src/github.com/rook/rook/)
++  - (cd ${GOPATH}/src/github.com/rook/rook && patch -p1 <0001-enable-cross.patch)  
++  - (cd ${GOPATH}/src/github.com/rook/rook && make build && make do.build.parallel && make -C images/nfs PLATFORM=linux_arm64)  
++script:
++  - echo "finished" 
+diff --git a/0001-enable-cross.patch b/0001-enable-cross.patch
+new file mode 100644
+index 0000000..419d475
+--- /dev/null
++++ b/0001-enable-cross.patch
+@@ -0,0 +1,260 @@
++From 1a1addb83005da1edb7245e07708ddb44058bb60 Mon Sep 17 00:00:00 2001
++From: Bin Lu <lubinsz@gmail.com>
++Date: Thu, 15 Nov 2018 10:58:28 +0800
++Subject: [PATCH] enable cross
++
++---
++ .travis.yml                        |  32 ++++++++++
++ 0001-enable-cross.patch            | 117 +++++++++++++++++++++++++++++++++++++
++ images/nfs/Dockerfile              |  19 +-----
++ images/nfs/Dockerfile_header_arm64 |   1 +
++ images/nfs/Makefile                |  18 ++++--
++ 5 files changed, 165 insertions(+), 22 deletions(-)
++ create mode 100644 .travis.yml
++ create mode 100644 0001-enable-cross.patch
++ create mode 100644 images/nfs/Dockerfile_header_arm64
++
++diff --git a/.travis.yml b/.travis.yml
++new file mode 100644
++index 0000000..2bea51f
++--- /dev/null
+++++ b/.travis.yml
++@@ -0,0 +1,32 @@
+++language: go
+++go_import_path: github.com/lubinsz/rook 
+++
+++sudo: required
+++
+++services: docker
+++
+++go:
+++  - 1.10.x
+++
+++notifications:
+++  on_success: never
+++  on_failure: never
+++
+++before_install:
+++  - sudo apt-get -qq update
+++  - sudo apt-get install -y libseccomp-dev/trusty-backports
+++  - go get -u github.com/ghodss/yaml 
+++install:
+++  - mkdir -p ${GOPATH}/src/k8s.io
+++  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/kubernetes.git)
+++  - (cd ${GOPATH}/src/k8s.io/kubernetes && git checkout v1.11.3)
+++  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/client-go.git)
+++  - (cd ${GOPATH}/src/k8s.io/client-go && git checkout v9.0.0)  
+++  - mkdir -p ${GOPATH}/src/github.com/rook
+++  - (cd ${GOPATH}/src/github.com/rook && git clone https://github.com/rook/rook.git)
+++  - (cd ${GOPATH}/src/github.com/rook/rook && go get -d ./...)
+++  - (cp ${GOPATH}/src/github.com/lubinsz/rook/0001-enable-cross.patch ${GOPATH}/src/github.com/rook/rook/)
+++  - (cd ${GOPATH}/src/github.com/rook/rook && patch -p1 <0001-enable-cross.patch)  
+++  - (cd ${GOPATH}/src/github.com/rook/rook && make build && make do.build.parallel && make -C images/nfs PLATFORM=linux_arm64)  
+++script:
+++  - echo "finished" 
++diff --git a/0001-enable-cross.patch b/0001-enable-cross.patch
++new file mode 100644
++index 0000000..75a4006
++--- /dev/null
+++++ b/0001-enable-cross.patch
++@@ -0,0 +1,117 @@
+++From 79e150a7b207dce186030899adafc5426877c1fc Mon Sep 17 00:00:00 2001
+++From: Bin Lu <lubinsz@gmail.com>
+++Date: Thu, 15 Nov 2018 10:58:28 +0800
+++Subject: [PATCH] enable cross
+++
+++---
+++ .travis.yml                        | 30 ++++++++++++++++++++++++++++++
+++ images/nfs/Dockerfile              |  2 +-
+++ images/nfs/Dockerfile_header_arm64 |  1 +
+++ images/nfs/Makefile                | 19 ++++++++++++++-----
+++ 4 files changed, 46 insertions(+), 6 deletions(-)
+++ create mode 100644 .travis.yml
+++ create mode 100644 images/nfs/Dockerfile_header_arm64
+++
+++diff --git a/.travis.yml b/.travis.yml
+++new file mode 100644
+++index 0000000..5e9ebd4
+++--- /dev/null
++++++ b/.travis.yml
+++@@ -0,0 +1,30 @@
++++language: go
++++go_import_path: github.com/lubinsz/rook 
++++
++++sudo: required
++++
++++services: docker
++++
++++go:
++++  - 1.10.x
++++
++++notifications:
++++  on_success: never
++++  on_failure: never
++++
++++before_install:
++++  - sudo apt-get -qq update
++++  - sudo apt-get install -y libseccomp-dev/trusty-backports
++++  - go get -u github.com/ghodss/yaml 
++++install:
++++  - mkdir -p ${GOPATH}/src/k8s.io
++++  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/kubernetes.git)
++++  - (cd ${GOPATH}/src/k8s.io/kubernetes && git checkout v1.11.3)
++++  - (cd ${GOPATH}/src/k8s.io && git clone https://github.com/kubernetes/client-go.git)
++++  - (cd ${GOPATH}/src/k8s.io/client-go && git checkout v9.0.0)  
++++  - mkdir -p ${GOPATH}/src/github.com/rook
++++  - (cd ${GOPATH}/src/github.com/rook && git clone https://github.com/rook/rook.git)
++++  - (cd ${GOPATH}/src/github.com/rook/rook && go get -d ./...)
++++  - (cd ${GOPATH}/src/github.com/rook/rook && make build)  
++++script:
++++  - echo "finished" 
+++diff --git a/images/nfs/Dockerfile b/images/nfs/Dockerfile
+++index 85f2de5..8871c25 100644
+++--- a/images/nfs/Dockerfile
++++++ b/images/nfs/Dockerfile
+++@@ -31,7 +31,7 @@ RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-d
+++  && cd nfs-ganesha-2.4.1 \
+++  && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_CONFIG=vfs_only src/ \
+++  && patch -p1 < /nfs-ganesha.patch \
+++- && make \
++++ && make -j  \
+++  && make install \
+++  && cp src/scripts/ganeshactl/org.ganesha.nfsd.conf /etc/dbus-1/system.d/ \
+++  && cd .. \
+++diff --git a/images/nfs/Dockerfile_header_arm64 b/images/nfs/Dockerfile_header_arm64
+++new file mode 100644
+++index 0000000..86f7985
+++--- /dev/null
++++++ b/images/nfs/Dockerfile_header_arm64
+++@@ -0,0 +1 @@
++++COPY qemu-aarch64-static /usr/bin/qemu-aarch64-static
+++diff --git a/images/nfs/Makefile b/images/nfs/Makefile
+++index e678bc6..dd4435a 100755
+++--- a/images/nfs/Makefile
++++++ b/images/nfs/Makefile
+++@@ -20,11 +20,13 @@ include ../image.mk
+++ NFS_IMAGE = $(BUILD_REGISTRY)/nfs-$(GOARCH)
+++ 
+++ NFS_BASE ?= fedora:28
++++DOCKERFILE ?= Dockerfile
+++ 
+++ ifeq ($(GOARCH),amd64)
+++-NFS_BASEIMAGE = $(NFS_BASE)
++++	NFS_BASEIMAGE = $(NFS_BASE)
+++ else ifeq ($(GOARCH),arm64)
+++-NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
++++	NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
++++	DOCKERFILE = Dockerfile-arm64
+++ endif
+++ 
+++ TEMP := $(shell mktemp -d)
+++@@ -40,13 +42,20 @@ IMAGE_FILENAME := $(IMAGE_OUTPUT_DIR)/nfs.tar.gz
+++ 
+++ do.build:
+++ 	@echo === docker build $(NFS_IMAGE)
+++-	@cp Dockerfile $(TEMP)
++++	if [ $(GOARCH) == arm64 ]; then \
++++		docker run --rm --privileged multiarch/qemu-user-static:register --reset; \
++++		docker run --rm --privileged multiarch/qemu-user-static:register; \
++++		sed -e '/FROM NFS_BASEIMAGE/r Dockerfile_header_arm64' Dockerfile > ${DOCKERFILE}; \
++++		cd $(TEMP) && wget https://github.com/multiarch/qemu-user-static/releases/download/v3.0.0/qemu-aarch64-static; \
++++		chmod a+x qemu-aarch64-static; \
++++	fi
++++	@cp $(DOCKERFILE) $(TEMP)
+++ 	@cp start.sh $(TEMP)
+++ 	@cp $(OUTPUT_DIR)/bin/linux_$(GOARCH)/rook $(TEMP)
+++-	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' Dockerfile
++++	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' $(DOCKERFILE)
+++ 	@docker build $(BUILD_ARGS) \
+++ 		-t $(NFS_IMAGE) \
+++-		$(TEMP)
++++		-f $(TEMP)/$(DOCKERFILE) $(TEMP)
+++ 	@[ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] && [ -n "$(OLD_IMAGE_ID)" ] && docker rmi $(OLD_IMAGE_ID) || true
+++ 	@if [ ! -e "$(IMAGE_FILENAME)" ] || [ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] || [ -n "$(OLD_IMAGE_ID)" ]; then \
+++ 		echo === saving image $(NFS_IMAGE); \
+++-- 
+++2.7.4
+++
++diff --git a/images/nfs/Dockerfile b/images/nfs/Dockerfile
++index 85f2de5..2dd4cc2 100644
++--- a/images/nfs/Dockerfile
+++++ b/images/nfs/Dockerfile
++@@ -22,23 +22,8 @@ FROM NFS_BASEIMAGE
++ # 2. Set NFS_V4_RECOV_ROOT to /export
++ # 3. Use device major/minor as fsid major/minor to work on OverlayFS
++ 
++-RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch libnsl2-devel && dnf clean all \
++- && curl -L https://github.com/nfs-ganesha/nfs-ganesha/archive/V2.4.1.tar.gz | tar zx \
++- && curl -L https://github.com/nfs-ganesha/nfs-ganesha/commit/c583534b166be198755d905c82a7687d83b458d8.patch -o /nfs-ganesha.patch \
++- && curl -L https://github.com/nfs-ganesha/ntirpc/archive/v1.4.4.tar.gz | tar zx \
++- && rm -r nfs-ganesha-2.4.1/src/libntirpc \
++- && mv ntirpc-1.4.4 nfs-ganesha-2.4.1/src/libntirpc \
++- && cd nfs-ganesha-2.4.1 \
++- && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_CONFIG=vfs_only src/ \
++- && patch -p1 < /nfs-ganesha.patch \
++- && make \
++- && make install \
++- && cp src/scripts/ganeshactl/org.ganesha.nfsd.conf /etc/dbus-1/system.d/ \
++- && cd .. \
++- && rm -rf nfs-ganesha-2.4.1 /nfs-ganesha.patch \
++- && dnf remove -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch && dnf clean all
++-
++-RUN dnf install -y dbus-x11 rpcbind hostname nfs-utils xfsprogs jemalloc libnfsidmap && dnf clean all
+++#RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch libnsl2-devel && dnf clean all 
+++#RUN dnf install -y gcc
++ 
++ RUN mkdir -p /var/run/dbus
++ RUN mkdir -p /export
++diff --git a/images/nfs/Dockerfile_header_arm64 b/images/nfs/Dockerfile_header_arm64
++new file mode 100644
++index 0000000..86f7985
++--- /dev/null
+++++ b/images/nfs/Dockerfile_header_arm64
++@@ -0,0 +1 @@
+++COPY qemu-aarch64-static /usr/bin/qemu-aarch64-static
++diff --git a/images/nfs/Makefile b/images/nfs/Makefile
++index e678bc6..0e61198 100755
++--- a/images/nfs/Makefile
+++++ b/images/nfs/Makefile
++@@ -20,11 +20,13 @@ include ../image.mk
++ NFS_IMAGE = $(BUILD_REGISTRY)/nfs-$(GOARCH)
++ 
++ NFS_BASE ?= fedora:28
+++DOCKERFILE ?= Dockerfile
++ 
++ ifeq ($(GOARCH),amd64)
++-NFS_BASEIMAGE = $(NFS_BASE)
+++	NFS_BASEIMAGE = $(NFS_BASE)
++ else ifeq ($(GOARCH),arm64)
++-NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
+++	NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
+++	DOCKERFILE = Dockerfile-arm64
++ endif
++ 
++ TEMP := $(shell mktemp -d)
++@@ -40,13 +42,19 @@ IMAGE_FILENAME := $(IMAGE_OUTPUT_DIR)/nfs.tar.gz
++ 
++ do.build:
++ 	@echo === docker build $(NFS_IMAGE)
++-	@cp Dockerfile $(TEMP)
+++	if [ $(GOARCH) == arm64 ]; then \
+++		docker run --rm --privileged multiarch/qemu-user-static:register --reset; \
+++		sed -e '/FROM NFS_BASEIMAGE/r Dockerfile_header_arm64' Dockerfile > ${DOCKERFILE}; \
+++		cd $(TEMP) && wget https://github.com/multiarch/qemu-user-static/releases/download/v3.0.0/qemu-aarch64-static; \
+++		chmod a+x qemu-aarch64-static; \
+++	fi
+++	@cp $(DOCKERFILE) $(TEMP)
++ 	@cp start.sh $(TEMP)
++ 	@cp $(OUTPUT_DIR)/bin/linux_$(GOARCH)/rook $(TEMP)
++-	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' Dockerfile
+++	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' $(DOCKERFILE)
++ 	@docker build $(BUILD_ARGS) \
++ 		-t $(NFS_IMAGE) \
++-		$(TEMP)
+++		-f $(TEMP)/$(DOCKERFILE) $(TEMP)
++ 	@[ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] && [ -n "$(OLD_IMAGE_ID)" ] && docker rmi $(OLD_IMAGE_ID) || true
++ 	@if [ ! -e "$(IMAGE_FILENAME)" ] || [ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] || [ -n "$(OLD_IMAGE_ID)" ]; then \
++ 		echo === saving image $(NFS_IMAGE); \
++-- 
++2.7.4
++
+diff --git a/images/nfs/Dockerfile b/images/nfs/Dockerfile
+index 85f2de5..2dd4cc2 100644
+--- a/images/nfs/Dockerfile
++++ b/images/nfs/Dockerfile
+@@ -22,23 +22,8 @@ FROM NFS_BASEIMAGE
+ # 2. Set NFS_V4_RECOV_ROOT to /export
+ # 3. Use device major/minor as fsid major/minor to work on OverlayFS
+ 
+-RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch libnsl2-devel && dnf clean all \
+- && curl -L https://github.com/nfs-ganesha/nfs-ganesha/archive/V2.4.1.tar.gz | tar zx \
+- && curl -L https://github.com/nfs-ganesha/nfs-ganesha/commit/c583534b166be198755d905c82a7687d83b458d8.patch -o /nfs-ganesha.patch \
+- && curl -L https://github.com/nfs-ganesha/ntirpc/archive/v1.4.4.tar.gz | tar zx \
+- && rm -r nfs-ganesha-2.4.1/src/libntirpc \
+- && mv ntirpc-1.4.4 nfs-ganesha-2.4.1/src/libntirpc \
+- && cd nfs-ganesha-2.4.1 \
+- && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_CONFIG=vfs_only src/ \
+- && patch -p1 < /nfs-ganesha.patch \
+- && make \
+- && make install \
+- && cp src/scripts/ganeshactl/org.ganesha.nfsd.conf /etc/dbus-1/system.d/ \
+- && cd .. \
+- && rm -rf nfs-ganesha-2.4.1 /nfs-ganesha.patch \
+- && dnf remove -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch && dnf clean all
+-
+-RUN dnf install -y dbus-x11 rpcbind hostname nfs-utils xfsprogs jemalloc libnfsidmap && dnf clean all
++#RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch libnsl2-devel && dnf clean all 
++#RUN dnf install -y gcc
+ 
+ RUN mkdir -p /var/run/dbus
+ RUN mkdir -p /export
+diff --git a/images/nfs/Dockerfile_header_arm64 b/images/nfs/Dockerfile_header_arm64
+new file mode 100644
+index 0000000..86f7985
+--- /dev/null
++++ b/images/nfs/Dockerfile_header_arm64
+@@ -0,0 +1 @@
++COPY qemu-aarch64-static /usr/bin/qemu-aarch64-static
+diff --git a/images/nfs/Makefile b/images/nfs/Makefile
+index e678bc6..0e61198 100755
+--- a/images/nfs/Makefile
++++ b/images/nfs/Makefile
+@@ -20,11 +20,13 @@ include ../image.mk
+ NFS_IMAGE = $(BUILD_REGISTRY)/nfs-$(GOARCH)
+ 
+ NFS_BASE ?= fedora:28
++DOCKERFILE ?= Dockerfile
+ 
+ ifeq ($(GOARCH),amd64)
+-NFS_BASEIMAGE = $(NFS_BASE)
++	NFS_BASEIMAGE = $(NFS_BASE)
+ else ifeq ($(GOARCH),arm64)
+-NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
++	NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
++	DOCKERFILE = Dockerfile-arm64
+ endif
+ 
+ TEMP := $(shell mktemp -d)
+@@ -40,13 +42,19 @@ IMAGE_FILENAME := $(IMAGE_OUTPUT_DIR)/nfs.tar.gz
+ 
+ do.build:
+ 	@echo === docker build $(NFS_IMAGE)
+-	@cp Dockerfile $(TEMP)
++	if [ $(GOARCH) == arm64 ]; then \
++		docker run --rm --privileged multiarch/qemu-user-static:register --reset; \
++		sed -e '/FROM NFS_BASEIMAGE/r Dockerfile_header_arm64' Dockerfile > ${DOCKERFILE}; \
++		cd $(TEMP) && wget https://github.com/multiarch/qemu-user-static/releases/download/v3.0.0/qemu-aarch64-static; \
++		chmod a+x qemu-aarch64-static; \
++	fi
++	@cp $(DOCKERFILE) $(TEMP)
+ 	@cp start.sh $(TEMP)
+ 	@cp $(OUTPUT_DIR)/bin/linux_$(GOARCH)/rook $(TEMP)
+-	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' Dockerfile
++	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' $(DOCKERFILE)
+ 	@docker build $(BUILD_ARGS) \
+ 		-t $(NFS_IMAGE) \
+-		$(TEMP)
++		-f $(TEMP)/$(DOCKERFILE) $(TEMP)
+ 	@[ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] && [ -n "$(OLD_IMAGE_ID)" ] && docker rmi $(OLD_IMAGE_ID) || true
+ 	@if [ ! -e "$(IMAGE_FILENAME)" ] || [ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] || [ -n "$(OLD_IMAGE_ID)" ]; then \
+ 		echo === saving image $(NFS_IMAGE); \
+-- 
+2.7.4
+
diff --git a/images/nfs/Dockerfile b/images/nfs/Dockerfile
index 85f2de5..2dd4cc2 100644
--- a/images/nfs/Dockerfile
+++ b/images/nfs/Dockerfile
@@ -22,23 +22,8 @@ FROM NFS_BASEIMAGE
 # 2. Set NFS_V4_RECOV_ROOT to /export
 # 3. Use device major/minor as fsid major/minor to work on OverlayFS
 
-RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch libnsl2-devel && dnf clean all \
- && curl -L https://github.com/nfs-ganesha/nfs-ganesha/archive/V2.4.1.tar.gz | tar zx \
- && curl -L https://github.com/nfs-ganesha/nfs-ganesha/commit/c583534b166be198755d905c82a7687d83b458d8.patch -o /nfs-ganesha.patch \
- && curl -L https://github.com/nfs-ganesha/ntirpc/archive/v1.4.4.tar.gz | tar zx \
- && rm -r nfs-ganesha-2.4.1/src/libntirpc \
- && mv ntirpc-1.4.4 nfs-ganesha-2.4.1/src/libntirpc \
- && cd nfs-ganesha-2.4.1 \
- && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_CONFIG=vfs_only src/ \
- && patch -p1 < /nfs-ganesha.patch \
- && make \
- && make install \
- && cp src/scripts/ganeshactl/org.ganesha.nfsd.conf /etc/dbus-1/system.d/ \
- && cd .. \
- && rm -rf nfs-ganesha-2.4.1 /nfs-ganesha.patch \
- && dnf remove -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch && dnf clean all
-
-RUN dnf install -y dbus-x11 rpcbind hostname nfs-utils xfsprogs jemalloc libnfsidmap && dnf clean all
+#RUN dnf install -y tar gcc cmake autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel patch libnsl2-devel && dnf clean all 
+#RUN dnf install -y gcc
 
 RUN mkdir -p /var/run/dbus
 RUN mkdir -p /export
diff --git a/images/nfs/Dockerfile_header_arm64 b/images/nfs/Dockerfile_header_arm64
new file mode 100644
index 0000000..86f7985
--- /dev/null
+++ b/images/nfs/Dockerfile_header_arm64
@@ -0,0 +1 @@
+COPY qemu-aarch64-static /usr/bin/qemu-aarch64-static
diff --git a/images/nfs/Makefile b/images/nfs/Makefile
index e678bc6..0e61198 100755
--- a/images/nfs/Makefile
+++ b/images/nfs/Makefile
@@ -20,11 +20,13 @@ include ../image.mk
 NFS_IMAGE = $(BUILD_REGISTRY)/nfs-$(GOARCH)
 
 NFS_BASE ?= fedora:28
+DOCKERFILE ?= Dockerfile
 
 ifeq ($(GOARCH),amd64)
-NFS_BASEIMAGE = $(NFS_BASE)
+	NFS_BASEIMAGE = $(NFS_BASE)
 else ifeq ($(GOARCH),arm64)
-NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
+	NFS_BASEIMAGE = arm64v8/$(NFS_BASE)
+	DOCKERFILE = Dockerfile-arm64
 endif
 
 TEMP := $(shell mktemp -d)
@@ -40,13 +42,19 @@ IMAGE_FILENAME := $(IMAGE_OUTPUT_DIR)/nfs.tar.gz
 
 do.build:
 	@echo === docker build $(NFS_IMAGE)
-	@cp Dockerfile $(TEMP)
+	if [ $(GOARCH) == arm64 ]; then \
+		docker run --rm --privileged multiarch/qemu-user-static:register --reset; \
+		sed -e '/FROM NFS_BASEIMAGE/r Dockerfile_header_arm64' Dockerfile > ${DOCKERFILE}; \
+		cd $(TEMP) && wget https://github.com/multiarch/qemu-user-static/releases/download/v3.0.0/qemu-aarch64-static; \
+		chmod a+x qemu-aarch64-static; \
+	fi
+	@cp $(DOCKERFILE) $(TEMP)
 	@cp start.sh $(TEMP)
 	@cp $(OUTPUT_DIR)/bin/linux_$(GOARCH)/rook $(TEMP)
-	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' Dockerfile
+	@cd $(TEMP) && $(SED_CMD) 's|NFS_BASEIMAGE|$(NFS_BASEIMAGE)|g' $(DOCKERFILE)
 	@docker build $(BUILD_ARGS) \
 		-t $(NFS_IMAGE) \
-		$(TEMP)
+		-f $(TEMP)/$(DOCKERFILE) $(TEMP)
 	@[ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] && [ -n "$(OLD_IMAGE_ID)" ] && docker rmi $(OLD_IMAGE_ID) || true
 	@if [ ! -e "$(IMAGE_FILENAME)" ] || [ "$(OLD_IMAGE_ID)" != "$(CURRENT_IMAGE_ID)" ] || [ -n "$(OLD_IMAGE_ID)" ]; then \
 		echo === saving image $(NFS_IMAGE); \
-- 
2.7.4

